2*(data %>% select(bp) )
# Select blood pressure from data
data %>% select(bp)
data %>% select(bp) %>% mean
# Select blood pressure from data
mean(data %>% select(bp))
# Select blood pressure from data
data %>% select(bp)
str(data$bp)
str(data %>% select(bp))
# Extract blood pressure from data
bp1 <- data$bp; bp1
str(bp1)
# Select blood pressure from data
bp2 <- data %>% select(bp); bp2
str(bp2)
(mat1 <- matrix(data = seq(from = 1,to = 6, by =1), nrow = 3, ncol = 2, byrow = T))
(mat4[,2] <- c(1,2))
mat4[,2] <- c(1,2)
mat4
# Select blood pressure from data
(bp2 <- data %>% select(bp))
?spBayes
install_hugo()
install.packages("blogdown")
install_hugo()
library(blogdown)
install_hugo()
hugo_version()
update_hugo()
k <- c(1:30)
plot(k, dbinom(k, size = 30, prob = 0.5), type = "h")
k <- c(1:10)
plot(k, dbinom(k, size = 10, prob = 0.5), type = "h")
k <- c(0:10)
plot(k, dbinom(k, size = 10, prob = 0.5), type = "h")
77/170
13/20
chance <- c(rep(1, 16), rep(0,14))
chance
sample(chance, size = 10, replace = F)
sims <- matrix(NA, nrow = col = 2, nrow = 100)
sims <- matrix(NA, ncol = 2, nrow = 100)
for (i in 1:100){samp <- sample(chance, size = 10, replace = F); sims[i,]<-c(sum(samp), 16-sum(samp))}
sims
for (i in 1:100){samp <- sample(chance, size = 10, replace = F); sims[i,]<-c(sum(samp)/10, (16-sum(samp))/20)}
sims
qplot(sims[,1] - sims[,2])
library(ggplot2)
qplot(sims[,1] - sims[,2])
qplot(sims[,1] - sims[,2], bins = 10)
qplot(sims[,1] - sims[,2], bins = 16)
qplot(sims[,1] - sims[,2], bins = 20)
dotchart(sims[,1] - sims[,2])
mu <- 5
var1 <- 1
log.like <- function(x,mu,var){
part1 <- -0.5 * log(2 * pi * var)
part2 <- -1 * ((x - mu)^2) / (2 * var)
return(part1 + part2)
}
x <- rnorm(20, mu, sqrt(var1))
plot(x , log.like(x))
plot(x , log.like(x, mu, var1))
plot(x , log.like(x, mu, var1), type = "l")
?plot
x <- rnorm(200, mu, sqrt(var1))
plot(x , log.like(x, mu, var1), type = "l")
plot(x , log.like(x, mu, var1), type = "p")
plot(log.like(x, mu, var1), type = "l")
solve(matrix(c(-2,2,-1,-1), nrow = 2, byrow = T))
normalF <- function(parvec) {
# Log of likelihood of a normal distribution
# parvec[1] - mean
# parvec[2] - standard deviation
# x - set of observations. Should be initialized before MLE
sum ( -0.5* log(parvec[2]) - 0.5*(x - parvec[1])^2/parvec[2] )
}
x = c(1,2,3,4) # set of observations
normalF(c(1,1))
mu <- 5
var1 - 1
x = rnorm(25, mu, sqrt(var1))  # set of observations
normalF(c(mu,sqrt(var1)))
x
mu_range <- seq(0,10,.01)
normalF(c(mu_range,sqrt(var1)))
mu_range <- seq(0,10,.01)
for (i in 1:length(mu_range)){
x = rnorm(25, mu, sqrt(var1))  # set of observations
normalF(c(mu_range[i],sqrt(var1)))
}
normalF(c(mu_range[i],sqrt(var1)))
length(mu_range)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x
mu <- 5
var1 - 1
mu_range <- seq(0,10,.01)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x = rnorm(25, mu, sqrt(var1))  # set of observations
for (i in 1:m){
ll <- normalF(c(mu_range[i],sqrt(var1)))
m[i,] <- c(mu_range[i], ll)
}
var1 - 1
mu_range <- seq(0,10,.01)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x = rnorm(25, mu, sqrt(var1))  # set of observations
for (i in 1:m){
ll <- normalF(c(mu_range[i],sqrt(var1)))
vals[i,] <- c(mu_range[i], ll)
}
head(vals)
plot(vals[,1], vals[,2])
mu <- 5
var1 - 1
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x = rnorm(25, mu, sqrt(var1))  # set of observations
for (i in 1:m){
ll <- normalF(c(mu_range[i],sqrt(var1)))
vals[i,] <- c(mu_range[i], ll)
}
library(dplyr)
library(ggplot2)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll = 2)
head(vals)
ggplot(vals, aes(x = mu, y = ll))+
geom_line()
mu <- 5
var1 - 1
mu_range <- seq(0,12,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x = rnorm(25, mu, sqrt(var1))  # set of observations
for (i in 1:m){
ll <- normalF(c(mu_range[i],sqrt(var1)))
vals[i,] <- c(mu_range[i], ll)
}
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll = 2)
ggplot(vals, aes(x = mu, y = ll))+
geom_line()
mu <- 5
var1 - 1
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 2)
x = rnorm(25, mu, sqrt(var1))  # set of observations
for (i in 1:m){
ll <- normalF(c(mu_range[i],sqrt(var1)))
vals[i,] <- c(mu_range[i], ll)
}
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll = 2)
ggplot(vals, aes(x = mu, y = ll))+
geom_line()
mu <- 5
var1 - 1
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 3)
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
normalF <- function(parvec, x) {
# Log of likelihood of a normal distribution
# parvec[1] - mean
# parvec[2] - standard deviation
# x - set of observations. Should be initialized before MLE
sum ( -0.5* log(parvec[2]) - 0.5*(x - parvec[1])^2/parvec[2] )
}
mu <- 5
var1 - 1
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 3)
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
mu <- 5
var1 <- 1
var2 <- 25
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 3)
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
head(vals)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
head(vals)
?gather
?shape
?spread
library(tidyverse)
?gather
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(ll1:ll2, ll)
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(2:3, "ll")
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(ll1:ll2, "ll")
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather( "ll",ll1:ll2)
head(vals)
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather( "ll",2:3)
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(key = "ll", value = 2:3)
vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(key = "ll", value = ll1:ll2)
vals
str(vals)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(key = "ll", value = "ll1":"ll2")
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)%>%
gather(key = 'll')
vals
vals <- matrix(NA, nrow = m, ncol = 3)
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
vals %>%
gather(key = 'll', "ll1")
vals %>%
gather(key = 'll', "ll1":"ll2")
vals %>%
gather(key = 'log-like')
vals
vals %>%
gather(mu = 'log-like', ll1:ll2)
vals %>%
gather(key = 'mu', ll1:ll2)
vals %>%
gather(key = mu, ll1:ll2)
vals %>%
gather(key = mu)
vals <- vals %>%
gather(key = mu) %>%
rename(mod = 1, loglike = 2)
head(vals)
vals <- matrix(NA, nrow = m, ncol = 3)
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
head(mu)
head(vals)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
vals
vals <- vals %>%
gather(key = mu, value = ll1:ll2)
vals %>%
gather(key = mu, value = "model")
vals %>%
gather(key = mu, value = "model", ll1:ll2)
vals %>%
gather(key = mu, value = "model", ll1,ll2)
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
head(vals)
mu <- 5
var1 <- 1
var2 <- 25
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 3)
vals2 <- vals
x = rnorm(25, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
head(vals)
vals %>%
gather(key = "model", value = "ll", ll1:ll2)
vals <- vals %>%
gather(key = "model", value = "ll", ll1:ll2)
ggplot(vals, aes(x = mu, y = ll, col = model))+
geom_line()
mu <- 5
var1 <- 5
var2 <- 25
mu_range <- seq(0,10,.1)
m <- length(mu_range)
vals <- matrix(NA, nrow = m, ncol = 3)
vals2 <- vals
x = rnorm(50, mu, sqrt(var1))  # set of observations
x2 =  rnorm(25, mu, sqrt(var2))
for (i in 1:m){
ll1 <- normalF(c(mu_range[i],sqrt(var1)), x)
ll2 <- normalF(c(mu_range[i],sqrt(var1)), x2)
vals[i,] <- c(mu_range[i], ll1, ll2)
}
vals <- vals %>% as.data.frame() %>%
rename(mu = 1, ll1 = 2, ll2 = 3)
vals <- vals %>%
gather(key = "model", value = "ll", ll1:ll2)
ggplot(vals, aes(x = mu, y = ll, col = model))+
geom_line()
setwd("~/Documents/GitHub/sta610-group2/Data")
data_long <- readRDS("data_long.Rda")
load("~/Documents/GitHub/sta610-group2/Data/data_long.Rda")
View(data_long)
load("~/Documents/GitHub/sta610-group2/Data/data_full.Rda")
View(data_full)
library(R2jags)
dat <- load("~/Documents/GitHub/sta610-group2/Data/data_full.Rda")
dat
head(dat)
head(data_full)
# county-pop
y <- data_full$TotalCountyPopulation
library(tidyverse)
# county-pop
y <- data_full %>%
group_by(county_desc) %>%
dplyr::select(TotalCountPopulation)
# county-pop
y <- data_full %>%
group_by(county_desc) %>%
dplyr::select(TotalCountyPopulation)
head(y)
# county-pop
y <- data_full %>%
group_by(county_desc) %>%
dplyr::select(TotalCountyPopulation) %>%
unique()
head(y)
# county-pop
y <- data_full %>%
group_by(county_desc) %>%
dplyr::select(TotalCountyPopulation) %>%
unique() %>%
ungroup()
# county-pop
y <- unique(data_full$TotalCountyPopulation)
yy
y
n_county <- length(y)
data_full %>%
group_by(county_desc, race_code)
data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(freq)) %>%
select(count)
data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(count)
data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(count) %>%
unique()
asian <- data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(count) %>%
unique() %>%
filter(race_code == "A")
asian
asian <- data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(count) %>%
unique() %>%
filter(race_code == "A") %>%
ungroup()
asian <- data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(count) %>%
unique() %>%
filter(race_code == "A") %>%
ungroup() %>%
select(count)
asian
asian <- data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, race_code, count) %>%
unique() %>%
filter(race_code == "A") %>%
ungroup() %>%
select(count)
asian
race <- list()
race_counts <- list()
unique(data_full$race_code)
race_codes <- c("A", "B", "I", "M", "O","W")
race_counts <- list()
race_codes <- c("A", "B", "I", "M", "O","W")
for (i in 1:length(race_codes)){
race_counts[[i]] <-  data_full %>%
group_by(county_desc, race_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, race_code, count) %>%
unique() %>%
filter(race_code == race_codes[i]) %>%
ungroup() %>%
select(count)
}
race_counts[[1]]
race_counts[[2]]
race_counts[[6]]
ethnic_counts <- list()
ethnic_codes <- c("HL", "NL")
for (i in 1:length(race_codes)){
ethnic_counts[[i]] <-  data_full %>%
group_by(county_desc, ethnic_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, ethnic_code, count) %>%
unique() %>%
filter(ethnic_code == ethnic_codes[i]) %>%
ungroup() %>%
select(count)
}
ethnic_codes
ethnic_counts
ethnic_counts <- list()
ethnic_codes <- c("HL", "NL")
for (i in 1:length(ethnic_codes)){
ethnic_counts[[i]] <-  data_full %>%
group_by(county_desc, ethnic_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, ethnic_code, count) %>%
unique() %>%
filter(ethnic_code == ethnic_codes[i]) %>%
ungroup() %>%
select(count)
}
ethnic_counts
race_codes <- unique(data_full$race_code)
str(race_codes)
age_counts <- list()
age_codes <- unique(data_full$age)
for (i in 1:length(age_codes)){
age_counts[[i]] <-  data_full %>%
group_by(county_desc, age_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, age_code, count) %>%
unique() %>%
filter(age_code == age_codes[i]) %>%
ungroup() %>%
select(count)
}
age_counts <- list()
age_codes <- unique(data_full$age)
for (i in 1:length(age_codes)){
age_counts[[i]] <-  data_full %>%
group_by(county_desc, age) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, age, count) %>%
unique() %>%
filter(age == age_codes[i]) %>%
ungroup() %>%
select(count)
}
age_counts
sex_counts <- list()
sex_codes <- unique(data_full$sex_code)
for (i in 1:length(sex_codes)){
sex_counts[[i]] <-  data_full %>%
group_by(county_desc, sex_code) %>%
mutate(count = sum(Freq)) %>%
select(county_desc, sex_code, count) %>%
unique() %>%
filter(sex_code == sex_codes[i]) %>%
ungroup() %>%
select(count)
}
